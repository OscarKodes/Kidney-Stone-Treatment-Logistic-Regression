# check column names
colnames(WLS)
# show frequency distribution table
freq(WLS$mar_types)
# basic cross tabulation of frequencies======
table(WLS$r_edu, WLS$health)
# cross table of proportions================
prop.table(table(WLS$r_edu, WLS$health), 1)
# chi-square test===========================
chisq.test(WLS$r_edu, WLS$health)
# Use apply_labels on DataFrame GSS =====================
WLS = apply_labels(WLS, health = c("1 Least Healthy" = 1,
"2 Less Healthy"= 2,
"3 More Healthy" = 3,
"4 Most Healthy" = 4))
# Make fancier cross tabs with expss package
healthTable <- crosstab(WLS$r_edu,
WLS$health,
prop.r = T,
chisq = T,
dnn=c("Respondent's Education",
"Respondent's Health"))
healthTable
# basic cross tabulation of frequencies======
table(WLS$mar_types, WLS$health)
# cross table of proportions================
prop.table(table(WLS$mar_types, WLS$health), 1)
# chi-square test===========================
chisq.test(WLS$mar_types, WLS$health)
# Use apply_labels on DataFrame GSS =====================
WLS = apply_labels(WLS, health = c("1 Least Healthy" = 1,
"2 Less Healthy"= 2,
"3 More Healthy" = 3,
"4 Most Healthy" = 4))
# Make fancier cross tabs with expss package
mar_healthTable <- crosstab(WLS$mar_types,
WLS$health,
prop.r = T,
chisq = T,
dnn=c("Marriage Type",
"Respondent's Health"))
mar_healthTable
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())   # clear memory
gc()
setwd("C:/Users/Oscar Ko/Desktop/Review-Stats-R")
library(tidyverse) #importing, cleaning, recoding, and analyzing data
library(magrittr) # pipe operator
library(haven) # reading recent versions of stata, spss, sas files. For earlier versions, use the "foreign" package
library(foreign)
library(sjmisc) # data and variable transformations
library(expss) # package to make cross-tabulations tables
library(dplyr)
library(descr)
#Importing stata files:
WLS_educ <- read_dta("data/WLS_educ.dta")
WLS_health <- read_dta("data/WLS_health.dta")
# Examining the two data sets shows you that WLS_health has 2 variables (id and health). There are 4,641 unique individuals. These individuals are the same individuals in WLS_educ. WLS_educ has 7 variables but does not have the health variable.
glimpse(WLS_educ)
glimpse(WLS_health)
# Use the bind command to combine 2 data sets and create a new data frame, WLS. In this code, I have also included an additional step that filters in only the variables that I will use to analyze memo 4.
WLS <- cbind(WLS_educ, WLS_health) %>%
select(brdxdy, sexrsp, edfa57q, edmo57q, spouse_edu, resp_edu, health)
glimpse(WLS)
# Creating new categorical educational attainment variables for respondent and spouse
WLS <- WLS %>%
mutate (
r_edu = case_when(
resp_edu ==12 ~ "1 HS or Less",
resp_edu >= 13 & resp_edu <16 ~ "2 Some College",
resp_edu >=16 & resp_edu ~ "3 BA or more"),
sp_edu = case_when (
spouse_edu == 12 ~ "1 HS or Less",
spouse_edu >=13 & spouse_edu < 16 ~ "2 Some College",
spouse_edu >=16 ~ "3 BA or more"))
table(WLS$r_edu, WLS$sp_edu) #basic cross tabulation of frequencies
prop.table(table(WLS$r_edu, WLS$sp_edu), 1)
chisq.test(WLS$r_edu, WLS$sp_edu)
crosstab(WLS$r_edu, WLS$sp_edu, prop.r = T, chisq = T, dnn=c("Respondent's education", "Spouse's education"))
# Creating marriage type variable
WLS <- WLS %>%
mutate(
homogamous = ifelse(r_edu == sp_edu, 1, 0 ),
hypergamous = ifelse(sexrsp == 1 & r_edu > sp_edu | sexrsp == 2 & r_edu < sp_edu, 1, 0),
hypogamous = ifelse(sexrsp == 2 & r_edu > sp_edu | sexrsp == 1 & r_edu < sp_edu, 1, 0),
marriage_type = case_when(
homogamous==1 ~ "1 Homogamous",
hypergamous==1 ~ "2 Hypergamous",
hypogamous==1 ~ "3 Hypogamous"
))
frequency(WLS$homogamous)
frequency(WLS$hypergamous)
frequency(WLS$hypogamous)
table(WLS$marriage_type, WLS$homogamous)
table(WLS$marriage_type, WLS$hypergamous)
table(WLS$marriage_type, WLS$hypogamous)
WLS <- WLS %>%
mutate(
health4 = case_when(
health==1 ~ "1 Fair or less",
health==2 ~ "2 Good",
health==3 ~ "3 Very Good",
health==4 ~ "4 Excellent"
))
frequency(WLS$health4)
table(WLS$health, WLS$health4)
## Option 1
prop.table(table(WLS$r_edu, WLS$health4), 1)
chisq.test(WLS$r_edu, WLS$health)
prop.table(table(WLS$marriage_type, WLS$health4), 1)
chisq.test(WLS$r_edu, WLS$health)
## Option 2
flat_table(WLS, r_edu, health, margin = "row")
chisq.test(WLS$r_edu, WLS$health)
## Option 3
crosstab(WLS$r_edu, WLS$health4, prop.r = T, chisq = T, dnn=c("Education level", "Self-rated health"))
crosstab(WLS$marriage_type,
WLS$health4,
dnn=c("Marriage Type", "Self-Rated Health"),
prop.r = T,
chisq = T)
############################################################
# KIDNEY STONE TREATMENT PREDICTION
# Clear Everything
rm(list = ls())
# Set working directory
setwd("G:/My Drive/Projects-Self/KidneyStones")
# Get working directory
getwd()
# Get data
data <- read.csv("kidney_stone_data.csv")
# Examine data
head(data)
tail(data)
str(data)
summary(data)
colnames(data)
# need descr package for crosstab() function
library(descr)
# need expss package for apply_labels
library(expss)
# Seperate large and small stones
size_filter <- data$stone_size == "large"
size_filter <- data$stone_size == "large"
small_stones_data <- data[!size_filter,]
large_stones_data <- data[size_filter,]
# Use apply_labels
data <- apply_labels(small_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for small stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = F,
chisq = T)
Use apply_labels
data <- apply_labels(small_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for small stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
data <- apply_labels(data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for large stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
data <- apply_labels(large_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for large stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
data <- apply_labels(data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = F,
chisq = T)
# Use apply_labels
data <- apply_labels(data,
stone_size = "Stone Size",
stone_size = c("Large" = "Large",
"Small" = "Small"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
data <- apply_labels(data,
stone_size = "Stone Size",
stone_size = c("Large" = "Large",
"Small" = "Small"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
View(data)
# Use apply_labels
data <- apply_labels(data,
stone_size = "Stone Size",
stone_size = c("large" = "large",
"small" = "small"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
# Clear Everything
rm(list = ls())
# Set working directory
setwd("G:/My Drive/Projects-Self/KidneyStones")
# Get working directory
getwd()
# Get data
data <- read.csv("kidney_stone_data.csv")
# Examine data
head(data)
tail(data)
str(data)
summary(data)
colnames(data)
# need descr package for crosstab() function
library(descr)
# need expss package for apply_labels
library(expss)
# Seperate large and small stones ---------------------
size_filter <- data$stone_size == "large"
small_stones_data <- data[!size_filter,]
large_stones_data <- data[size_filter,]
View(data)
# Use apply_labels
data <- apply_labels(data,
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
data <- apply_labels(data,
stone_size = "Stone Size",
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
data <- apply_labels(data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
data <- apply_labels(small_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for small stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
------------------------------
# Use apply_labels
data <- apply_labels(large_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for large stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
data <- apply_labels(large_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for large stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
data <- apply_labels(data,
stone_size = "Stone Size",
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
ONE TREATMENT PREDICTION
# Clear Everything
rm(list = ls())
# Set working directory
setwd("G:/My Drive/Projects-Self/KidneyStones")
# Get working directory
getwd()
# Get data
data <- read.csv("kidney_stone_data.csv")
# Examine data
head(data)
tail(data)
str(data)
summary(data)
colnames(data)
## CROSS TABULATION with CHI-SQ TESTS ======================
# need descr package for crosstab() function
library(descr)
# need expss package for apply_labels
library(expss)
# Seperate large and small stones ---------------------
size_filter <- data$stone_size == "large"
small_stones_data <- data[!size_filter,]
large_stones_data <- data[size_filter,]
# ONLY SMALL STONES -----------------------------------
# Use apply_labels
small_stones_data <- apply_labels(small_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for small stones?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
small_stones_data <- apply_labels(small_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for small stones?
crosstab(small_stones_data$success,
small_stones_data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
# Use apply_labels
large_stones_data <- apply_labels(large_stones_data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success for large stones?
crosstab(large_stones_data$success,
large_stones_data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
-----------------
# Use apply_labels
data <- apply_labels(data,
treatment = "Treatment",
treatment = c("A" = "A",
"B" = "B"),
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does treatment type have significant effect on success?
crosstab(data$success,
data$treatment,
prop.r = F,
prop.c = T,
chisq = T)
data <- apply_labels(data,
stone_size = "Stone Size",
success = "Success",
success = c("Yes" = 1,
"No" = 0))
# Chi sq test - Does stone size have significant effect on success?
crosstab(data$success,
data$stone_size,
prop.r = F,
prop.c = T,
chisq = T)
logit_full_model <- glm(formula = Success ~ .,
family = binomial,
data = dataset)
summary(logit_full_model)
dataset <- data.frame(Success = data$success,
isTreatmentA = ifelse(data$treatment == "A", 1, 0),
isLargeStone = ifelse(data$stone_size == "large", 1, 0))
logit_full_model <- glm(formula = Success ~ .,
family = binomial,
data = dataset)
summary(logit_full_model)
data$odds_ratio <- predict(logit_full_model,
type = "response",
newdata = data$success)
data$odds_ratio
data$odds_ratio <- predict(logit_full_model,
type = "response",
newdata = dataset$success)
data$odds_ratio
logit_only_size <- glm(formula = Success ~ isLargeStone,
family = binomial,
data = dataset)
summary(logit_only_size)
logit_only_size <- glm(formula = Success ~ isLargeStone, isTreatmentA, (isTreatmentA * isLargeStone),
family = binomial,
data = dataset)
summary(logit_only_size)
logit_only_size <- glm(formula = Success ~ isLargeStone + isTreatmentA + (isTreatmentA * isLargeStone),
family = binomial,
data = dataset)
summary(logit_only_size)
logit_only_size <- glm(formula = Success ~ isLargeStone + (isTreatmentA * isLargeStone),
family = binomial,
data = dataset)
summary(logit_only_size)
logit_only_size <- glm(formula = Success ~ isLargeStone + (isTreatmentA * isLargeStone),
family = binomial,
data = dataset)
summary(logit_only_size)
dataset$interaction <- dataset$isTreatmentA * dataset$isLargeStone
logit_only_size <- glm(formula = Success ~ isLargeStone + isTreatmentA + interaction,
family = binomial,
data = dataset)
summary(logit_only_size)
logit_only_size <- glm(formula = Success ~ isLargeStone + interaction,
family = binomial,
data = dataset)
summary(logit_only_size)
